import { useState, useEffect } from 'react';
import supabase from '../../services/supabase.js';
import { formatDate } from '../../utils/dateUtils.js';

const WeeklyReportsList = ({ onGenerateReport }) => {
  const [reports, setReports] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchReports();
  }, []);

  const fetchReports = async () => {
    setLoading(true);
    try {
      const { data, error } = await supabase
        .from('weekly_reports')
        .select(`
          *,
          staff:report_generated_by (first_name, last_name)
        `)
        .order('week_end_date', { ascending: false })
        .limit(10);

      if (error) throw error;
      setReports(data || []);
    } catch (error) {
      console.error('Error fetching weekly reports:', error);
    } finally {
      setLoading(false);
    }
  };

  const handleSendEmail = async (reportId) => {
    try {
      // Call your supabase function or API to send the weekly report email
      const { data, error } = await supabase.rpc('send_weekly_email_report');
      
      if (error) throw error;
      
      alert('Weekly report email sent successfully!');
      fetchReports(); // Refresh the list
    } catch (error) {
      console.error('Error sending weekly report email:', error);
      alert(`Error sending report: ${error.message}`);
    }
  };

  return (
    <div className="bg-white overflow-hidden shadow rounded-lg">
      <div className="px-4 py-5 sm:px-6 flex justify-between items-center">
        <div>
          <h3 className="text-lg leading-6 font-medium text-gray-900">Weekly Reports</h3>
          <p className="mt-1 max-w-2xl text-sm text-gray-500">Review and manage weekly ministry reports</p>
        </div>
        {onGenerateReport && (
          <button
            onClick={onGenerateReport}
            className="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500"
          >
            Generate New Report
          </button>
        )}
      </div>
      
      {loading ? (
        <div className="px-4 py-5 sm:p-6 flex justify-center">
          <div className="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-indigo-500"></div>
        </div>
      ) : reports.length === 0 ? (
        <div className="px-4 py-5 sm:p-6 text-center text-gray-500">
          No reports found
        </div>
      ) : (
        <div className="overflow-x-auto">
          <table className="min-w-full divide-y divide-gray-200">
            <thead className="bg-gray-50">
              <tr>
                <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Week
                </th>
                <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Attendance
                </th>
                <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  First Timers
                </th>
                <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Generated By
                </th>
                <th scope="col" className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Email Status
                </th>
                <th scope="col" className="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">
                  Actions
                </th>
              </tr>
            </thead>
            <tbody className="bg-white divide-y divide-gray-200">
              {reports.map((report) => (
                <tr key={report.report_id} className="hover:bg-gray-50">
                  <td className="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">
                    {formatDate(report.week_start_date, { month: 'short', day: 'numeric' })} - {formatDate(report.week_end_date, { month: 'short', day: 'numeric', year: 'numeric' })}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {report.total_attendance} ({report.unique_children} unique)
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {report.first_timers}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                    {report.staff?.first_name} {report.staff?.last_name || 'System'}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-sm">
                    {report.email_sent_date ? (
                      <span className="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-green-100 text-green-800">
                        Sent on {formatDate(report.email_sent_date, { month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' })}
                      </span>
                    ) : (
                      <span className="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-yellow-100 text-yellow-800">
                        Not sent
                      </span>
                    )}
                  </td>
                  <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                    {report.report_pdf_url && (
                      <a
                        href={report.report_pdf_url}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="text-indigo-600 hover:text-indigo-900 mr-4"
                      >
                        View PDF
                      </a>
                    )}
                    {!report.email_sent_date && (
                      <button
                        onClick={() => handleSendEmail(report.report_id)}
                        className="text-indigo-600 hover:text-indigo-900"
                      >
                        Send Email
                      </button>
                    )}
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      )}
    </div>
  );
};

export default WeeklyReportsList;